From c3c779fba64ceafa7c1aaa1b75686eb33498c0da Mon Sep 17 00:00:00 2001
From: dragonn <dragonn@op.pl>
Date: Wed, 2 Jul 2025 08:33:33 +0200
Subject: [PATCH] apu-mem-fixes

---
 drivers/platform/x86/asus-armoury.c | 97 ++++++++++-------------------
 1 file changed, 32 insertions(+), 65 deletions(-)

diff --git a/drivers/platform/x86/asus-armoury.c b/drivers/platform/x86/asus-armoury.c
index 232e45b880df..c5ce9d774c17 100644
--- a/drivers/platform/x86/asus-armoury.c
+++ b/drivers/platform/x86/asus-armoury.c
@@ -612,6 +612,19 @@ ATTR_GROUP_ENUM_CUSTOM(egpu_enable, "egpu_enable", "Enable the eGPU (also disabl
 
 /* Device memory available to APU */
 
+/* Values map for APU memory: some looks out of order but are actually correct */
+static u32 apu_mem_map[] = {
+	[0] = 0x000, /* called "AUTO" on the BIOS, is the minimum available */
+	[1] = 0x102,
+	[2] = 0x103,
+	[3] = 0x104,
+	[4] = 0x105,
+	[5] = 0x107,
+	[6] = 0x108,
+	[7] = 0x109,
+	[8] = 0x106,
+};
+
 static ssize_t apu_mem_current_value_show(struct kobject *kobj, struct kobj_attribute *attr,
 					  char *buf)
 {
@@ -622,40 +635,21 @@ static ssize_t apu_mem_current_value_show(struct kobject *kobj, struct kobj_attr
 	if (err)
 		return err;
 
-	switch (mem) {
-	case 0x100:
-		mem = 0;
-		break;
-	case 0x102:
-		mem = 1;
-		break;
-	case 0x103:
-		mem = 2;
-		break;
-	case 0x104:
-		mem = 3;
-		break;
-	case 0x105:
-		mem = 4;
-		break;
-	case 0x106:
-		/* This is out of order and looks wrong but is correct */
-		mem = 8;
-		break;
-	case 0x107:
-		mem = 5;
-		break;
-	case 0x108:
-		mem = 6;
-		break;
-	case 0x109:
-		mem = 7;
-		break;
-	default:
-		mem = 4;
-		break;
+	if ((mem & ASUS_WMI_DSTS_PRESENCE_BIT) == 0)
+		return -ENODEV;
+
+	mem &= ~ASUS_WMI_DSTS_PRESENCE_BIT;
+
+	/* After 0x000 is set, a read will return 0x100 */
+	if (mem == 0x100)
+		return sysfs_emit(buf, "0\n");
+
+	for (unsigned int i = 0; i < ARRAY_SIZE(apu_mem_map); i++) {
+		if (apu_mem_map[i] == mem)
+			return sysfs_emit(buf, "%u\n", i);
 	}
 
+	pr_warn("Unrecognised value for APU mem 0x%08x\n", mem);
 	return sysfs_emit(buf, "%u\n", mem);
 }
 
@@ -669,38 +663,10 @@ static ssize_t apu_mem_current_value_store(struct kobject *kobj, struct kobj_att
 	if (result)
 		return result;
 
-	switch (requested) {
-	case 0:
-		mem = 0x000;
-		break;
-	case 1:
-		mem = 0x102;
-		break;
-	case 2:
-		mem = 0x103;
-		break;
-	case 3:
-		mem = 0x104;
-		break;
-	case 4:
-		mem = 0x105;
-		break;
-	case 5:
-		mem = 0x107;
-		break;
-	case 6:
-		mem = 0x108;
-		break;
-	case 7:
-		mem = 0x109;
-		break;
-	case 8:
-		/* This is out of order and looks wrong but is correct */
-		mem = 0x106;
-		break;
-	default:
-		return -EIO;
-	}
+	if (requested > ARRAY_SIZE(apu_mem_map))
+		return -EINVAL;
+
+	mem = apu_mem_map[requested];
 
 	err = asus_wmi_set_devstate(ASUS_WMI_DEVID_APU_MEM, mem, &result);
 	if (err) {
@@ -708,7 +674,7 @@ static ssize_t apu_mem_current_value_store(struct kobject *kobj, struct kobj_att
 		return err;
 	}
 
-	pr_info("APU memory changed to %uGB, reboot required\n", requested);
+	pr_info("APU memory changed to %uGB, reboot required\n", requested+1);
 	sysfs_notify(kobj, NULL, attr->attr.name);
 
 	asus_set_reboot_and_signal_event();
@@ -719,6 +685,7 @@ static ssize_t apu_mem_current_value_store(struct kobject *kobj, struct kobj_att
 static ssize_t apu_mem_possible_values_show(struct kobject *kobj, struct kobj_attribute *attr,
 					    char *buf)
 {
+	BUILD_BUG_ON(ARRAY_SIZE(apu_mem_map) != 9);
 	return sysfs_emit(buf, "0;1;2;3;4;5;6;7;8\n");
 }
 ATTR_GROUP_ENUM_CUSTOM(apu_mem, "apu_mem", "Set available system RAM (in GB) for the APU to use");
-- 
2.50.0

